<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="6" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-09-07T13:19:07 IST" name="Suite1" finished-at="2021-09-07T13:19:08 IST" duration-ms="238">
    <groups>
      <group name="SmokeTest">
        <method signature="TestNG1.test1(java.lang.String)[pri:0, instance:Package1.TestNG1@2898ac89]" name="test1" class="Package1.TestNG1"/>
        <method signature="TestNG2.test2()[pri:0, instance:Package1.TestNG2@683dbc2c]" name="test2" class="Package1.TestNG2"/>
        <method signature="TestNG3.Demo3()[pri:0, instance:Package1.TestNG3@6497b078]" name="Demo3" class="Package1.TestNG3"/>
      </group> <!-- SmokeTest -->
    </groups>
    <test started-at="2021-09-07T13:19:07 IST" name="Test1Module" finished-at="2021-09-07T13:19:08 IST" duration-ms="73">
      <class name="Package1.TestNG2">
        <test-method signature="test1()[pri:0, instance:Package1.TestNG2@683dbc2c]" started-at="2021-09-07T13:19:08 IST" name="test1" finished-at="2021-09-07T13:19:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test2()[pri:0, instance:Package1.TestNG2@683dbc2c]" started-at="2021-09-07T13:19:08 IST" name="test2" finished-at="2021-09-07T13:19:08 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:Package1.TestNG2@683dbc2c]" started-at="2021-09-07T13:19:08 IST" name="afterclass" finished-at="2021-09-07T13:19:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- Package1.TestNG2 -->
      <class name="Package1.TestNG1">
        <test-method signature="apimobilelogin()[pri:0, instance:Package1.TestNG1@2898ac89]" started-at="2021-09-07T13:19:07 IST" name="apimobilelogin" finished-at="2021-09-07T13:19:07 IST" duration-ms="13" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Package1.TestNG1.apimobilelogin(TestNG1.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apimobilelogin -->
        <test-method signature="test1(java.lang.String)[pri:0, instance:Package1.TestNG1@2898ac89]" started-at="2021-09-07T13:19:07 IST" name="test1" finished-at="2021-09-07T13:19:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[parameterTestLevel.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test2()[pri:0, instance:Package1.TestNG1@2898ac89]" started-at="2021-09-07T13:19:08 IST" name="test2" finished-at="2021-09-07T13:19:08 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Package1.TestNG1.test2(TestNG1.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- Package1.TestNG1 -->
    </test> <!-- Test1Module -->
    <test started-at="2021-09-07T13:19:08 IST" name="Test2module" finished-at="2021-09-07T13:19:08 IST" duration-ms="25">
      <class name="Package1.TestNG3">
        <test-method is-config="true" signature="beforesuite()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:07 IST" name="beforesuite" finished-at="2021-09-07T13:19:07 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method is-config="true" signature="beforetest()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="beforetest" finished-at="2021-09-07T13:19:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="afterclass" finished-at="2021-09-07T13:19:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="beforemethod" finished-at="2021-09-07T13:19:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="Demo()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="Demo" finished-at="2021-09-07T13:19:08 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="aftermethod" finished-at="2021-09-07T13:19:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="beforemethod" finished-at="2021-09-07T13:19:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="Demo2()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="Demo2" finished-at="2021-09-07T13:19:08 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Package1.TestNG3.Demo2(TestNG3.java:61)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo2 -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="aftermethod" finished-at="2021-09-07T13:19:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="beforemethod" finished-at="2021-09-07T13:19:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="Demo3()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="Demo3" finished-at="2021-09-07T13:19:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo3 -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="aftermethod" finished-at="2021-09-07T13:19:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="beforemethod" finished-at="2021-09-07T13:19:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="Demo4(java.lang.String)[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="Demo4" finished-at="2021-09-07T13:19:08 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[parameter.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo4 -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="aftermethod" finished-at="2021-09-07T13:19:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="aftertest" finished-at="2021-09-07T13:19:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
        <test-method is-config="true" signature="aftersuite()[pri:0, instance:Package1.TestNG3@6497b078]" started-at="2021-09-07T13:19:08 IST" name="aftersuite" finished-at="2021-09-07T13:19:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- Package1.TestNG3 -->
    </test> <!-- Test2module -->
  </suite> <!-- Suite1 -->
</testng-results>
